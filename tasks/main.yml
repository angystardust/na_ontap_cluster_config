---
# tasks file for na-ontap-cluster-config
- name: Get Ontapi version
  na_ontap_gather_facts:
    state: info
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    https: true
    ontapi: 32
    validate_certs: false
- name: Setup licenses
  na_ontap_license:
    state: present
    license_codes: "{{ license_codes }}"
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  when: license_codes != None
- name: Create Aggregates
  na_ontap_aggregate:
    state: present
    service_state: online
    name: "{{ item.name }}"
    nodes: "{{ item.node }}"
    disk_count: "{{ item.disk_count }}"
    raid_size: "{{ item.max_raid }}"
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ aggrs }}"
  when: aggrs != None
- name: Modify Net Port
  na_ontap_net_port:
    state: present
    node: "{{ item.node }}"
    port: "{{ item.port }}"
    mtu: "{{ item.mtu }}"
    autonegotiate_admin: "{{ autonegotiate }}"
    flowcontrol_admin: none
    username: "{{ username }}"
    password: "{{ password }}"
    hostname: "{{ hostname }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ ports }}"
  when: ports != None
- name: Create Interface Group
  na_ontap_net_ifgrp:
    state: present
    distribution_function: "{{ distribution_function }}"
    name: "{{ item.name }}"
    port: "{{ item.ports }}"
    mode: "{{ ifgrp_mode }}"
    node: "{{ item.node}}"
    username: "{{ username }}"
    password: "{{ password }}"
    hostname: "{{ hostname }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ ifgrps  }}"
  when: ifgrps != None
- name: Create VLAN
  na_ontap_net_vlan:
    state: present
    vlanid: "{{ item.id }}"
    node: "{{ item.node }}"
    parent_interface: "{{ item.parent }}"
    username: "{{ username }}"
    password: "{{ password }}"
    hostname: "{{ hostname }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ vlans }}"
  when: vlans != None
- name: create broadcast domain
  na_ontap_broadcast_domain:
    state: present
    broadcast_domain: "{{ item.name }}"
    mtu: "{{ item.mtu }}"
    ipspace: "{{ item.ipspace }}"
    ports: :{{ item.ports }}"
    username: "{{ username }}"
    password: "{{ password }}"
    hostname: "{{ hostname }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ bcasts }}"
  when: bcasts != None
- name: Create Intercluster Lif
  na_ontap_interface:
    state: present
    interface_name: "{{ item.name }}"
    home_port: "{{ item.port }}"
    home_node: "{{ item.node }}"
    role: intercluster
    admin_status: up
    failover_policy: local-only
    is_auto_revert: true
    address: "{{ item.address }}"
    netmask: "{{ item.netmask }}"
    vserver: "{{ cluster_name }}"
    username: "{{ username }}"
    password: "{{ password }}"
    hostname: "{{ hostname }}"
    ontapi: "{{ ontap_facts.ontap_version }}"
    https: true
    validate_certs: false
  with_items:
    "{{ inters }}"
  when: inters != None
